-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.5 from ./app/Drakon/Parser.y
-----------------------------------------------------------------------------

state 0 contains 2 shift/reduce conflicts.
state 5 contains 2 shift/reduce conflicts.
state 9 contains 2 shift/reduce conflicts.
state 11 contains 2 shift/reduce conflicts.
state 16 contains 2 shift/reduce conflicts.
state 32 contains 2 shift/reduce conflicts.
state 34 contains 2 shift/reduce conflicts.
state 36 contains 2 shift/reduce conflicts.
state 38 contains 2 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_diagram -> prods                            (0)
	prods ->                                           (1)
	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'   (2)
	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods '}'   (3)
	prods -> block lBranch '{' prods '}' rBranch '{' prods soloId '}'   (4)
	prods -> block lBranch '{' prods '}' rBranch '{' prods '}'   (5)
	prods -> block                                     (6)
	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'   (7)
	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods '}'   (8)
	prods -> prods block lBranch '{' prods '}' rBranch '{' prods soloId '}'   (9)
	prods -> prods block lBranch '{' prods '}' rBranch '{' prods '}'   (10)
	prods -> prods block                               (11)
	prods -> soloId '{' prods '}'                      (12)
	prods -> soloId '{' prods soloId '}'               (13)
	prods -> prods soloId '{' prods '}'                (14)
	prods -> prods soloId '{' prods soloId '}'         (15)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	block          { TokenBlock $$ }
	soloId         { TokenSoloIdentifier $$ }
	lBranch        { TokenLeftBranch }
	rBranch        { TokenRightBranch }
	'{'            { TokenOCB }
	'}'            { TokenCCB }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_diagram  rule  0
	prods           rules 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_diagram -> . prods                           (rule 0)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	%eof           reduce using rule 1

	prods          goto state 2

State 1

	prods -> .                                          (rule 1)



State 2

	%start_diagram -> prods .                           (rule 0)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 8
	%eof           accept


State 3

	prods -> block . lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 2)
	prods -> block . lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 3)
	prods -> block . lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 4)
	prods -> block . lBranch '{' prods '}' rBranch '{' prods '}'    (rule 5)
	prods -> block .                                    (rule 6)

	block          reduce using rule 6
	soloId         reduce using rule 6
	lBranch        shift, and enter state 6
	'}'            reduce using rule 6
	%eof           reduce using rule 6


State 4

	prods -> soloId . '{' prods '}'                     (rule 12)
	prods -> soloId . '{' prods soloId '}'              (rule 13)

	'{'            shift, and enter state 5


State 5

	prods -> soloId '{' . prods '}'                     (rule 12)
	prods -> soloId '{' . prods soloId '}'              (rule 13)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 12

State 6

	prods -> block lBranch . '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 2)
	prods -> block lBranch . '{' prods soloId '}' rBranch '{' prods '}'    (rule 3)
	prods -> block lBranch . '{' prods '}' rBranch '{' prods soloId '}'    (rule 4)
	prods -> block lBranch . '{' prods '}' rBranch '{' prods '}'    (rule 5)

	'{'            shift, and enter state 11


State 7

	prods -> prods block . lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block . lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods block . lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block . lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods block .                              (rule 11)

	block          reduce using rule 11
	soloId         reduce using rule 11
	lBranch        shift, and enter state 10
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 8

	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9


State 9

	prods -> prods soloId '{' . prods '}'               (rule 14)
	prods -> prods soloId '{' . prods soloId '}'        (rule 15)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 17

State 10

	prods -> prods block lBranch . '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch . '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods block lBranch . '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch . '{' prods '}' rBranch '{' prods '}'    (rule 10)

	'{'            shift, and enter state 16


State 11

	prods -> block lBranch '{' . prods soloId '}' rBranch '{' prods soloId '}'    (rule 2)
	prods -> block lBranch '{' . prods soloId '}' rBranch '{' prods '}'    (rule 3)
	prods -> block lBranch '{' . prods '}' rBranch '{' prods soloId '}'    (rule 4)
	prods -> block lBranch '{' . prods '}' rBranch '{' prods '}'    (rule 5)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 15

State 12

	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> soloId '{' prods . '}'                     (rule 12)
	prods -> soloId '{' prods . soloId '}'              (rule 13)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 13
	'}'            shift, and enter state 14


State 13

	prods -> soloId '{' prods soloId . '}'              (rule 13)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 23


State 14

	prods -> soloId '{' prods '}' .                     (rule 12)

	block          reduce using rule 12
	soloId         reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 15

	prods -> block lBranch '{' prods . soloId '}' rBranch '{' prods soloId '}'    (rule 2)
	prods -> block lBranch '{' prods . soloId '}' rBranch '{' prods '}'    (rule 3)
	prods -> block lBranch '{' prods . '}' rBranch '{' prods soloId '}'    (rule 4)
	prods -> block lBranch '{' prods . '}' rBranch '{' prods '}'    (rule 5)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 21
	'}'            shift, and enter state 22


State 16

	prods -> prods block lBranch '{' . prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' . prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods block lBranch '{' . prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' . prods '}' rBranch '{' prods '}'    (rule 10)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 20

State 17

	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods soloId '{' prods . '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)
	prods -> prods soloId '{' prods . soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 18
	'}'            shift, and enter state 19


State 18

	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)
	prods -> prods soloId '{' prods soloId . '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 28


State 19

	prods -> prods soloId '{' prods '}' .               (rule 14)

	block          reduce using rule 14
	soloId         reduce using rule 14
	'}'            reduce using rule 14
	%eof           reduce using rule 14


State 20

	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods . soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods block lBranch '{' prods . soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' prods . '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods block lBranch '{' prods . '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 26
	'}'            shift, and enter state 27


State 21

	prods -> block lBranch '{' prods soloId . '}' rBranch '{' prods soloId '}'    (rule 2)
	prods -> block lBranch '{' prods soloId . '}' rBranch '{' prods '}'    (rule 3)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 25


State 22

	prods -> block lBranch '{' prods '}' . rBranch '{' prods soloId '}'    (rule 4)
	prods -> block lBranch '{' prods '}' . rBranch '{' prods '}'    (rule 5)

	rBranch        shift, and enter state 24


State 23

	prods -> soloId '{' prods soloId '}' .              (rule 13)

	block          reduce using rule 13
	soloId         reduce using rule 13
	'}'            reduce using rule 13
	%eof           reduce using rule 13


State 24

	prods -> block lBranch '{' prods '}' rBranch . '{' prods soloId '}'    (rule 4)
	prods -> block lBranch '{' prods '}' rBranch . '{' prods '}'    (rule 5)

	'{'            shift, and enter state 32


State 25

	prods -> block lBranch '{' prods soloId '}' . rBranch '{' prods soloId '}'    (rule 2)
	prods -> block lBranch '{' prods soloId '}' . rBranch '{' prods '}'    (rule 3)

	rBranch        shift, and enter state 31


State 26

	prods -> prods block lBranch '{' prods soloId . '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods soloId . '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 30


State 27

	prods -> prods block lBranch '{' prods '}' . rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' prods '}' . rBranch '{' prods '}'    (rule 10)

	rBranch        shift, and enter state 29


State 28

	prods -> prods soloId '{' prods soloId '}' .        (rule 15)

	block          reduce using rule 15
	soloId         reduce using rule 15
	'}'            reduce using rule 15
	%eof           reduce using rule 15


State 29

	prods -> prods block lBranch '{' prods '}' rBranch . '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' prods '}' rBranch . '{' prods '}'    (rule 10)

	'{'            shift, and enter state 36


State 30

	prods -> prods block lBranch '{' prods soloId '}' . rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods soloId '}' . rBranch '{' prods '}'    (rule 8)

	rBranch        shift, and enter state 35


State 31

	prods -> block lBranch '{' prods soloId '}' rBranch . '{' prods soloId '}'    (rule 2)
	prods -> block lBranch '{' prods soloId '}' rBranch . '{' prods '}'    (rule 3)

	'{'            shift, and enter state 34


State 32

	prods -> block lBranch '{' prods '}' rBranch '{' . prods soloId '}'    (rule 4)
	prods -> block lBranch '{' prods '}' rBranch '{' . prods '}'    (rule 5)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 33

State 33

	prods -> block lBranch '{' prods '}' rBranch '{' prods . soloId '}'    (rule 4)
	prods -> block lBranch '{' prods '}' rBranch '{' prods . '}'    (rule 5)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 40
	'}'            shift, and enter state 41


State 34

	prods -> block lBranch '{' prods soloId '}' rBranch '{' . prods soloId '}'    (rule 2)
	prods -> block lBranch '{' prods soloId '}' rBranch '{' . prods '}'    (rule 3)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 39

State 35

	prods -> prods block lBranch '{' prods soloId '}' rBranch . '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods soloId '}' rBranch . '{' prods '}'    (rule 8)

	'{'            shift, and enter state 38


State 36

	prods -> prods block lBranch '{' prods '}' rBranch '{' . prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' prods '}' rBranch '{' . prods '}'    (rule 10)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 37

State 37

	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods block lBranch '{' prods '}' rBranch '{' prods . soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods block lBranch '{' prods '}' rBranch '{' prods . '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 46
	'}'            shift, and enter state 47


State 38

	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' . prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' . prods '}'    (rule 8)

	block          shift, and enter state 3
			(reduce using rule 1)

	soloId         shift, and enter state 4
			(reduce using rule 1)

	'}'            reduce using rule 1

	prods          goto state 45

State 39

	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods . soloId '}'    (rule 2)
	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods . '}'    (rule 3)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 43
	'}'            shift, and enter state 44


State 40

	prods -> block lBranch '{' prods '}' rBranch '{' prods soloId . '}'    (rule 4)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 42


State 41

	prods -> block lBranch '{' prods '}' rBranch '{' prods '}' .    (rule 5)

	block          reduce using rule 5
	soloId         reduce using rule 5
	'}'            reduce using rule 5
	%eof           reduce using rule 5


State 42

	prods -> block lBranch '{' prods '}' rBranch '{' prods soloId '}' .    (rule 4)

	block          reduce using rule 4
	soloId         reduce using rule 4
	'}'            reduce using rule 4
	%eof           reduce using rule 4


State 43

	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods soloId . '}'    (rule 2)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 51


State 44

	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods '}' .    (rule 3)

	block          reduce using rule 3
	soloId         reduce using rule 3
	'}'            reduce using rule 3
	%eof           reduce using rule 3


State 45

	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}'    (rule 7)
	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods . soloId '}'    (rule 7)
	prods -> prods . block lBranch '{' prods soloId '}' rBranch '{' prods '}'    (rule 8)
	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods . '}'    (rule 8)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods soloId '}'    (rule 9)
	prods -> prods . block lBranch '{' prods '}' rBranch '{' prods '}'    (rule 10)
	prods -> prods . block                              (rule 11)
	prods -> prods . soloId '{' prods '}'               (rule 14)
	prods -> prods . soloId '{' prods soloId '}'        (rule 15)

	block          shift, and enter state 7
	soloId         shift, and enter state 49
	'}'            shift, and enter state 50


State 46

	prods -> prods block lBranch '{' prods '}' rBranch '{' prods soloId . '}'    (rule 9)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 48


State 47

	prods -> prods block lBranch '{' prods '}' rBranch '{' prods '}' .    (rule 10)

	block          reduce using rule 10
	soloId         reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


State 48

	prods -> prods block lBranch '{' prods '}' rBranch '{' prods soloId '}' .    (rule 9)

	block          reduce using rule 9
	soloId         reduce using rule 9
	'}'            reduce using rule 9
	%eof           reduce using rule 9


State 49

	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods soloId . '}'    (rule 7)
	prods -> prods soloId . '{' prods '}'               (rule 14)
	prods -> prods soloId . '{' prods soloId '}'        (rule 15)

	'{'            shift, and enter state 9
	'}'            shift, and enter state 52


State 50

	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods '}' .    (rule 8)

	block          reduce using rule 8
	soloId         reduce using rule 8
	'}'            reduce using rule 8
	%eof           reduce using rule 8


State 51

	prods -> block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}' .    (rule 2)

	block          reduce using rule 2
	soloId         reduce using rule 2
	'}'            reduce using rule 2
	%eof           reduce using rule 2


State 52

	prods -> prods block lBranch '{' prods soloId '}' rBranch '{' prods soloId '}' .    (rule 7)

	block          reduce using rule 7
	soloId         reduce using rule 7
	'}'            reduce using rule 7
	%eof           reduce using rule 7


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 16
Number of terminals: 6
Number of non-terminals: 2
Number of states: 53
