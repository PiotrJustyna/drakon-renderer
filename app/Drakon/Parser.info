-----------------------------------------------------------------------------
Info file generated by Happy Version 2.1.6 from ./app/Drakon/Parser.y
-----------------------------------------------------------------------------

state 6 contains 1 shift/reduce conflicts.
state 10 contains 1 shift/reduce conflicts.
state 18 contains 1 shift/reduce conflicts.
state 20 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_diagram -> skewers                          (0)
	skewers -> headline                                (1)
	skewers -> skewers headline                        (2)
	headline -> action '{' skewer '}'                  (3)
	headline -> action '{' skewer soloId '}'           (4)
	skewer ->                                          (5)
	skewer -> block                                    (6)
	skewer -> skewer block                             (7)
	block -> action                                    (8)
	block -> action '{' skewer '}' '{' skewer '}'      (9)
	block -> action '{' skewer '}' '{' skewer soloId '}'   (10)
	block -> action '{' skewer soloId '}' '{' skewer '}'   (11)
	block -> action '{' skewer soloId '}' '{' skewer soloId '}'   (12)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	action         { TokenAction $$ }
	soloId         { TokenSoloIdentifier $$ }
	'{'            { TokenOCB }
	'}'            { TokenCCB }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_diagram  rule  0
	skewers         rules 1, 2
	headline        rules 3, 4
	skewer          rules 5, 6, 7
	block           rules 8, 9, 10, 11, 12

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_diagram -> . skewers                         (rule 0)

	action         shift, and enter state 3

	skewers        goto state 4
	headline       goto state 2

State 1

	skewers -> . headline                               (rule 1)

	action         shift, and enter state 3

	headline       goto state 2

State 2

	skewers -> headline .                               (rule 1)

	action         reduce using rule 1
	%eof           reduce using rule 1


State 3

	headline -> action . '{' skewer '}'                 (rule 3)
	headline -> action . '{' skewer soloId '}'          (rule 4)

	'{'            shift, and enter state 6


State 4

	%start_diagram -> skewers .                         (rule 0)
	skewers -> skewers . headline                       (rule 2)

	action         shift, and enter state 3
	%eof           accept

	headline       goto state 5

State 5

	skewers -> skewers headline .                       (rule 2)

	action         reduce using rule 2
	%eof           reduce using rule 2


State 6

	headline -> action '{' . skewer '}'                 (rule 3)
	headline -> action '{' . skewer soloId '}'          (rule 4)

	action         shift, and enter state 9
			(reduce using rule 5)

	soloId         reduce using rule 5
	'}'            reduce using rule 5

	skewer         goto state 7
	block          goto state 8

State 7

	headline -> action '{' skewer . '}'                 (rule 3)
	headline -> action '{' skewer . soloId '}'          (rule 4)
	skewer -> skewer . block                            (rule 7)

	action         shift, and enter state 9
	soloId         shift, and enter state 12
	'}'            shift, and enter state 13

	block          goto state 11

State 8

	skewer -> block .                                   (rule 6)

	action         reduce using rule 6
	soloId         reduce using rule 6
	'}'            reduce using rule 6


State 9

	block -> action .                                   (rule 8)
	block -> action . '{' skewer '}' '{' skewer '}'     (rule 9)
	block -> action . '{' skewer '}' '{' skewer soloId '}'    (rule 10)
	block -> action . '{' skewer soloId '}' '{' skewer '}'    (rule 11)
	block -> action . '{' skewer soloId '}' '{' skewer soloId '}'    (rule 12)

	action         reduce using rule 8
	soloId         reduce using rule 8
	'{'            shift, and enter state 10
	'}'            reduce using rule 8


State 10

	block -> action '{' . skewer '}' '{' skewer '}'     (rule 9)
	block -> action '{' . skewer '}' '{' skewer soloId '}'    (rule 10)
	block -> action '{' . skewer soloId '}' '{' skewer '}'    (rule 11)
	block -> action '{' . skewer soloId '}' '{' skewer soloId '}'    (rule 12)

	action         shift, and enter state 9
			(reduce using rule 5)

	soloId         reduce using rule 5
	'}'            reduce using rule 5

	skewer         goto state 15
	block          goto state 8

State 11

	skewer -> skewer block .                            (rule 7)

	action         reduce using rule 7
	soloId         reduce using rule 7
	'}'            reduce using rule 7


State 12

	headline -> action '{' skewer soloId . '}'          (rule 4)

	'}'            shift, and enter state 14


State 13

	headline -> action '{' skewer '}' .                 (rule 3)

	action         reduce using rule 3
	%eof           reduce using rule 3


State 14

	headline -> action '{' skewer soloId '}' .          (rule 4)

	action         reduce using rule 4
	%eof           reduce using rule 4


State 15

	skewer -> skewer . block                            (rule 7)
	block -> action '{' skewer . '}' '{' skewer '}'     (rule 9)
	block -> action '{' skewer . '}' '{' skewer soloId '}'    (rule 10)
	block -> action '{' skewer . soloId '}' '{' skewer '}'    (rule 11)
	block -> action '{' skewer . soloId '}' '{' skewer soloId '}'    (rule 12)

	action         shift, and enter state 9
	soloId         shift, and enter state 16
	'}'            shift, and enter state 17

	block          goto state 11

State 16

	block -> action '{' skewer soloId . '}' '{' skewer '}'    (rule 11)
	block -> action '{' skewer soloId . '}' '{' skewer soloId '}'    (rule 12)

	'}'            shift, and enter state 19


State 17

	block -> action '{' skewer '}' . '{' skewer '}'     (rule 9)
	block -> action '{' skewer '}' . '{' skewer soloId '}'    (rule 10)

	'{'            shift, and enter state 18


State 18

	block -> action '{' skewer '}' '{' . skewer '}'     (rule 9)
	block -> action '{' skewer '}' '{' . skewer soloId '}'    (rule 10)

	action         shift, and enter state 9
			(reduce using rule 5)

	soloId         reduce using rule 5
	'}'            reduce using rule 5

	skewer         goto state 21
	block          goto state 8

State 19

	block -> action '{' skewer soloId '}' . '{' skewer '}'    (rule 11)
	block -> action '{' skewer soloId '}' . '{' skewer soloId '}'    (rule 12)

	'{'            shift, and enter state 20


State 20

	block -> action '{' skewer soloId '}' '{' . skewer '}'    (rule 11)
	block -> action '{' skewer soloId '}' '{' . skewer soloId '}'    (rule 12)

	action         shift, and enter state 9
			(reduce using rule 5)

	soloId         reduce using rule 5
	'}'            reduce using rule 5

	skewer         goto state 24
	block          goto state 8

State 21

	skewer -> skewer . block                            (rule 7)
	block -> action '{' skewer '}' '{' skewer . '}'     (rule 9)
	block -> action '{' skewer '}' '{' skewer . soloId '}'    (rule 10)

	action         shift, and enter state 9
	soloId         shift, and enter state 22
	'}'            shift, and enter state 23

	block          goto state 11

State 22

	block -> action '{' skewer '}' '{' skewer soloId . '}'    (rule 10)

	'}'            shift, and enter state 27


State 23

	block -> action '{' skewer '}' '{' skewer '}' .     (rule 9)

	action         reduce using rule 9
	soloId         reduce using rule 9
	'}'            reduce using rule 9


State 24

	skewer -> skewer . block                            (rule 7)
	block -> action '{' skewer soloId '}' '{' skewer . '}'    (rule 11)
	block -> action '{' skewer soloId '}' '{' skewer . soloId '}'    (rule 12)

	action         shift, and enter state 9
	soloId         shift, and enter state 25
	'}'            shift, and enter state 26

	block          goto state 11

State 25

	block -> action '{' skewer soloId '}' '{' skewer soloId . '}'    (rule 12)

	'}'            shift, and enter state 28


State 26

	block -> action '{' skewer soloId '}' '{' skewer '}' .    (rule 11)

	action         reduce using rule 11
	soloId         reduce using rule 11
	'}'            reduce using rule 11


State 27

	block -> action '{' skewer '}' '{' skewer soloId '}' .    (rule 10)

	action         reduce using rule 10
	soloId         reduce using rule 10
	'}'            reduce using rule 10


State 28

	block -> action '{' skewer soloId '}' '{' skewer soloId '}' .    (rule 12)

	action         reduce using rule 12
	soloId         reduce using rule 12
	'}'            reduce using rule 12


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 13
Number of terminals: 4
Number of non-terminals: 5
Number of states: 29
